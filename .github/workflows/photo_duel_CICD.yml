# Github action for CICD for photo_duel Azure web application

name: 'Photo Duel CICD'

on:
  push:
    branches: [ "main" ]
  pull_request:

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  deployment:
    name: 'Deployment'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false -var-file="../photo_duel.tfvars"

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false -var-file="../photo_duel.tfvars"

    # Outputs terraform outputs to .json
    - name: Terraform Output
      run: terraform output -json > output.json

    - name: Echo Environement Variables from tf outputs
          run: |
            DB_PASSWORD=$(jq -r '.db_admin_password.value' output.json)
            echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
            DJANGO_SECRET_KEY=$(jq -r '.db_admin_password.value' output.json)
            echo "DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY" >> $GITHUB_ENV